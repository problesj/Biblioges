{% extends "base.twig" %}

{% block title %}Editar Carrera - Sistema de Bibliografía{% endblock %}

{% block content %}
<div class="container-fluid">
    <!-- Botón para ocultar/mostrar el panel lateral -->
    <button id="sidebarToggle" class="btn btn-link d-md-none rounded-circle mr-3">
        <i class="fas fa-bars"></i>
    </button>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">Editar Carrera</h1>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Datos de la Carrera</h6>
        </div>
        <div class="card-body">
            <form method="POST" action="{{ app_url }}carreras/{{ carrera.id }}/update" id="form-carrera" enctype="multipart/form-data">
                <input type="hidden" name="_method" value="PUT">
                
                <!-- Sección 1: Datos básicos -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="nombre" class="form-label">Nombre de la Carrera *</label>
                            <input type="text" class="form-control" id="nombre" name="nombre" value="{{ carrera.nombre }}" required>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="tipo_programa" class="form-label">Tipo de Programa *</label>
                            <select class="form-select" id="tipo_programa" name="tipo_programa" required>
                                <option value="">Seleccione un tipo</option>
                                <option value="P" {% if carrera.tipo_programa == 'P' %}selected{% endif %}>Pregrado</option>
                                <option value="G" {% if carrera.tipo_programa == 'G' %}selected{% endif %}>Postgrado</option>
                                <option value="O" {% if carrera.tipo_programa == 'O' %}selected{% endif %}>Otro</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="estado" class="form-label">Estado</label>
                            <select class="form-select" id="estado" name="estado">
                                <option value="1" {% if carrera.estado == 1 %}selected{% endif %}>Activo</option>
                                <option value="0" {% if carrera.estado == 0 %}selected{% endif %}>Inactivo</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Sección 1.5: Libro de Carrera -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="libro_carrera" class="form-label">Libro de Carrera (PDF)</label>
                            <input type="file" class="form-control" id="libro_carrera" name="libro_carrera" 
                                   accept=".pdf" max="10485760">
                            <small class="form-text text-muted">
                                <i class="fas fa-info-circle"></i> 
                                Solo archivos PDF. Tamaño máximo: 10MB
                            </small>
                            {% if carrera.url_libro %}
                            <div class="mt-2">
                                <div class="d-flex align-items-center gap-3">
                                    <small class="text-success">
                                        <i class="fas fa-check-circle"></i> 
                                        Archivo actual: 
                                        <a href="{{ app_url }}{{ carrera.url_libro }}" target="_blank" class="text-decoration-none">
                                            <i class="fas fa-file-pdf"></i> Ver PDF actual
                                        </a>
                                    </small>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="eliminar_libro" name="eliminar_libro" value="1">
                                        <label class="form-check-label text-danger" for="eliminar_libro">
                                            <i class="fas fa-trash"></i> Eliminar archivo actual
                                        </label>
                                    </div>
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>

                <!-- Sección 2: Códigos de carrera -->
                <div class="row mb-4">
                    <div class="col-12">
                        <h6 class="mb-3">Códigos de Carrera</h6>
                        <div id="codigos-container">
                            {% set codigos = carrera.codigos|split('|') %}
                            {% set vigencias_desde = carrera.vigencias_desde|split('|') %}
                            {% set vigencias_hasta = carrera.vigencias_hasta|split('|') %}
                            {% set sedes_ids = carrera.sedes_ids %}
                            {% set unidades_ids = carrera.unidades_ids %}
                            {% set codigos_ids = carrera.codigos_ids %}
                            
                            {% for i in 0..(codigos|length - 1) %}
                            <div class="row mb-3 codigo-row" {% if codigos_ids[i] is defined %}data-codigo-id="{{ codigos_ids[i] }}"{% endif %}>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="codigos[]" class="form-label">Código *</label>
                                        <input type="text" class="form-control" name="codigos[]" value="{{ codigos[i] }}" required>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="vigencias_desde[]" class="form-label">Vigencia Desde *</label>
                                        <input type="text" class="form-control" name="vigencias_desde[]" 
                                               value="{{ vigencias_desde[i] }}" pattern="\d{6}" title="Formato: AAAAMM" required
                                               placeholder="AAAAMM">
                                        <div class="invalid-feedback">El formato debe ser AAAAMM (ej: 202401)</div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="vigencias_hasta[]" class="form-label">Vigencia Hasta</label>
                                        <input type="text" class="form-control" name="vigencias_hasta[]" 
                                               value="{{ vigencias_hasta[i] }}" pattern="\d{6}" title="Formato: AAAAMM"
                                               placeholder="AAAAMM">
                                        <div class="invalid-feedback">El formato debe ser AAAAMM (ej: 202412)</div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="sedes[]" class="form-label">Sede *</label>
                                        <select class="form-select" name="sedes[]" required>
                                            <option value="">Seleccione una sede</option>
                                            {% for sede in sedes %}
                                            <option value="{{ sede.id }}" {% if sedes_ids[i] == sede.id %}selected{% endif %}>{{ sede.nombre }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="form-label">Unidad *</label>
                                        <select class="form-select" name="unidades[]" required>
                                            <option value="">Seleccione una unidad</option>
                                            {% for unidad in unidades %}
                                            <option value="{{ unidad.id }}" 
                                                    {% if unidades_ids[i] is defined and unidades_ids[i] == unidad.id %}selected{% endif %}>
                                                {{ unidad.nombre }}
                                            </option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-1 d-flex align-items-end">
                                    <div class="form-group mb-0">
                                        <button type="button" class="btn btn-danger btn-sm eliminar-codigo" title="Eliminar código">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                        <button type="button" class="btn btn-secondary btn-sm" id="agregar-codigo">
                            <i class="fas fa-plus"></i> Agregar otro código
                        </button>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Guardar
                        </button>
                        <a href="{{ app_url }}carreras" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Cancelar
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Función para cargar unidades por sede
        function cargarUnidadesPorSede(sedeSelect, unidadSeleccionada = null) {
            var unidadSelect = sedeSelect.closest('.row').find('select[name="unidades[]"]');
            unidadSelect.html('<option value="">Cargando...</option>');
            
            $.ajax({
                url: '{{ app_url }}api/unidades',
                method: 'GET',
                data: { sede_id: sedeSelect.val() },
                success: function(unidades) {
                    unidadSelect.html('<option value="">Seleccione una unidad</option>');
                    if (Array.isArray(unidades)) {
                        unidades.forEach(function(unidad) {
                            var selected = (unidadSeleccionada && unidadSeleccionada == unidad.id) ? 'selected' : '';
                            unidadSelect.append('<option value="' + unidad.id + '" ' + selected + '>' + unidad.nombre + '</option>');
                        });
                    } else {
                        console.error('La respuesta no es un array:', unidades);
                        unidadSelect.append('<option value="">Error al cargar unidades</option>');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error al cargar unidades:', error);
                    unidadSelect.html('<option value="">Error al cargar unidades</option>');
                }
            });
        }

        // Función para validar campos de vigencia
        function validarVigencia(input) {
            // Eliminar cualquier carácter que no sea dígito
            var value = input.value.replace(/\D/g, '');
            
            // Limitar a 6 dígitos
            if (value.length > 6) {
                value = value.slice(0, 6);
            }
            
            // Actualizar el valor del campo
            input.value = value;
            
            // Validar formato AAAAMM
            if (value.length === 6) {
                var anio = parseInt(value.substring(0, 4));
                var mes = parseInt(value.substring(4, 6));
                
                if (mes < 1 || mes > 12) {
                    input.classList.add('is-invalid');
                    return;
                }
                
                input.classList.remove('is-invalid');
            } else {
                input.classList.add('is-invalid');
            }
        }

        // Clonar fila de código
        $('#agregar-codigo').click(function() {
            var row = $('.codigo-row:first').clone();
            row.find('input').val('');
            row.find('select').val('');
            $('#codigos-container').append(row);
            
            // Agregar evento de cambio de sede a la nueva fila
            row.find('select[name="sedes[]"]').change(function() {
                cargarUnidadesPorSede($(this));
            });
            
            // Agregar validación a los campos de vigencia
            row.find('input[name^="vigencias_"]').on('input', function() {
                validarVigencia(this);
            });
            
            // Agregar evento de eliminación a la nueva fila
            row.find('.eliminar-codigo').click(function() {
                eliminarCodigo($(this));
            });
        });

        // Eliminar código de carrera
        function eliminarCodigo(button) {
            var row = button.closest('.codigo-row');
            var codigoId = row.data('codigo-id');
            
            if (!codigoId) {
                // Es una fila nueva, solo eliminar del DOM
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        title: '¿Está seguro?',
                        text: '¿Está seguro de que desea eliminar este código de carrera?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, eliminar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            row.remove();
                        }
                    });
                } else {
                    if (confirm('¿Está seguro de que desea eliminar este código de carrera?')) {
                        row.remove();
                    }
                }
                return;
            }
            
            // Es un código existente, eliminar del backend
            var carreraId = {{ carrera.id }};
            
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    title: '¿Está seguro?',
                    text: '¿Está seguro de que desea eliminar este código de carrera?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Mostrar loading
                        Swal.fire({
                            title: 'Eliminando...',
                            text: 'Por favor espere',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });
                        
                        $.ajax({
                            url: '{{ app_url }}carreras/' + carreraId + '/codigos/' + codigoId + '/delete',
                            method: 'POST',
                            success: function(response) {
                                if (response.success) {
                                    row.remove();
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Éxito',
                                        text: response.message
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.message
                                    });
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('Error al eliminar código:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Error al eliminar el código de carrera'
                                });
                            }
                        });
                    }
                });
            } else {
                // Fallback para navegadores sin SweetAlert2
                if (confirm('¿Está seguro de que desea eliminar este código de carrera?')) {
                    $.ajax({
                        url: '{{ app_url }}carreras/' + carreraId + '/codigos/' + codigoId + '/delete',
                        method: 'POST',
                        success: function(response) {
                            if (response.success) {
                                row.remove();
                                alert(response.message);
                            } else {
                                alert('Error: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error al eliminar código:', error);
                            alert('Error al eliminar el código de carrera');
                        }
                    });
                }
            }
        }

        // Agregar evento de eliminación a todas las filas existentes
        $('.eliminar-codigo').click(function() {
            eliminarCodigo($(this));
        });

        // Agregar validación a los campos de vigencia existentes
        $('input[name^="vigencias_"]').on('input', function() {
            validarVigencia(this);
        });

        // Agregar evento de cambio de sede a todas las filas existentes
        $('select[name="sedes[]"]').change(function() {
            var unidadSeleccionada = $(this).closest('.row').find('select[name="unidades[]"]').val();
            cargarUnidadesPorSede($(this), unidadSeleccionada);
        });

        // Cargar unidades para las sedes ya seleccionadas al cargar la página
        $('select[name="sedes[]"]').each(function() {
            if ($(this).val()) {
                var unidadSeleccionada = $(this).closest('.row').find('select[name="unidades[]"]').val();
                cargarUnidadesPorSede($(this), unidadSeleccionada);
            }
        });

        // Toggle del panel lateral
        $('#sidebarToggle').click(function() {
            $('body').toggleClass('sidebar-toggled');
            $('.sidebar').toggleClass('toggled');
            if ($('.sidebar').hasClass('toggled')) {
                $('.sidebar .collapse').collapse('hide');
            }
        });

        // Manejar la eliminación del archivo PDF
        $('#eliminar_libro').change(function() {
            var isChecked = $(this).is(':checked');
            var fileInput = $('#libro_carrera');
            
            if (isChecked) {
                // Deshabilitar el campo de archivo
                fileInput.prop('disabled', true);
                fileInput.val('');
            } else {
                // Habilitar el campo de archivo
                fileInput.prop('disabled', false);
            }
        });

        // Manejar el envío del formulario
        $('#form-carrera').on('submit', function(e) {
            // Validar eliminación de archivo
            var eliminarLibro = $('#eliminar_libro').is(':checked');
            if (eliminarLibro) {
                e.preventDefault();
                
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        title: '¿Eliminar archivo?',
                        text: '¿Está seguro de que desea eliminar el archivo PDF actual?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Sí, eliminar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Si confirma, enviar el formulario
                            $('#form-carrera')[0].submit();
                        } else {
                            // Si cancela, desmarcar el checkbox y habilitar el campo
                            $('#eliminar_libro').prop('checked', false);
                            $('#libro_carrera').prop('disabled', false);
                        }
                    });
                    return false;
                } else {
                    // Fallback para navegadores sin SweetAlert2
                    var confirmacion = confirm('¿Está seguro de que desea eliminar el archivo PDF actual?');
                    if (!confirmacion) {
                        $('#eliminar_libro').prop('checked', false);
                        $('#libro_carrera').prop('disabled', false);
                        return false;
                    }
                }
            }
            
            // Validar que al menos un código esté completo
            var codigosCompletos = false;
            var vigenciasValidas = true;
            
            $('.codigo-row').each(function() {
                var codigo = $(this).find('input[name="codigos[]"]').val();
                var sede = $(this).find('select[name="sedes[]"]').val();
                var unidad = $(this).find('select[name="unidades[]"]').val();
                var vigenciaDesde = $(this).find('input[name="vigencias_desde[]"]').val();
                
                if (codigo && sede && unidad && vigenciaDesde) {
                    codigosCompletos = true;
                }
                
                // Validar formato de vigencia
                if (vigenciaDesde && vigenciaDesde.length !== 6) {
                    vigenciasValidas = false;
                    $(this).find('input[name="vigencias_desde[]"]').addClass('is-invalid');
                }
            });

            if (!codigosCompletos) {
                e.preventDefault();
                alert('Debe completar al menos un código de carrera con todos sus datos');
                return false;
            }
            
            if (!vigenciasValidas) {
                e.preventDefault();
                alert('Los campos de vigencia deben tener exactamente 6 dígitos');
                return false;
            }

            // Si todo está bien, permitir el envío normal del formulario
            return true;
        });
    });
</script>
{% endblock %} 