{% extends "base.twig" %}

{% block title %}Coberturas Básicas Expandido{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Coberturas Básicas Expandido</h3>
                    <h5 class="card-subtitle">{{ carrera.sede }} - {{ carrera.codigo }} - {{ carrera.nombre }}</h5>
                </div>
                <div class="card-body">
                    <!-- Botones de acción -->
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-secondary" onclick="window.history.back()">
                                    <i class="fas fa-arrow-left"></i> Volver
                                </button>
                                <button type="button" class="btn btn-success" onclick="guardarReporte()">
                                    <i class="fas fa-save"></i> Guardar Reporte
                                </button>
                                <button type="button" class="btn btn-excel" onclick="exportarExcel()">
                                    <i class="fas fa-file-excel"></i> Exportar Excel
                                </button>
                                <button type="button" class="btn btn-secondary" onclick="exportarCSV()">
                                    <i class="fas fa-file-csv"></i> Exportar CSV
                                </button>
                            </div>
                        </div>
                    </div>

                    <form id="filtroFormacionForm" method="get">
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <h6>Selección de Asignaturas de Formación</h6>
                                <p class="text-muted small mb-2">
                                    Tipos de formación disponibles para esta carrera: 
                                    {% for tipo in tipos_formacion_disponibles %}
                                        <span class="badge bg-info">{{ tipo }}</span>
                                    {% endfor %}
                                </p>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_basica" name="tipos_formacion[]" value="FORMACION_BASICA" 
                                                   {% if not hay_filtros_aplicados or 'FORMACION_BASICA' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_basica">
                                                Formación Básica 
                                                <small class="text-muted">({{ 'FORMACION_BASICA' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_general" name="tipos_formacion[]" value="FORMACION_GENERAL"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_GENERAL' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_general">
                                                Formación General
                                                <small class="text-muted">({{ 'FORMACION_GENERAL' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_idiomas" name="tipos_formacion[]" value="FORMACION_IDIOMAS"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_IDIOMAS' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_idiomas">
                                                Formación Idiomas
                                                <small class="text-muted">({{ 'FORMACION_IDIOMAS' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_profesional" name="tipos_formacion[]" value="FORMACION_PROFESIONAL"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_PROFESIONAL' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_profesional">
                                                Formación Profesional
                                                <small class="text-muted">({{ 'FORMACION_PROFESIONAL' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_valores" name="tipos_formacion[]" value="FORMACION_VALORES"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_VALORES' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_valores">
                                                Formación Valores
                                                <small class="text-muted">({{ 'FORMACION_VALORES' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_especialidad" name="tipos_formacion[]" value="FORMACION_ESPECIALIDAD"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_ESPECIALIDAD' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_especialidad">
                                                Formación Especialidad
                                                <small class="text-muted">({{ 'FORMACION_ESPECIALIDAD' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="formacion_especial" name="tipos_formacion[]" value="FORMACION_ESPECIAL"
                                                   {% if not hay_filtros_aplicados or 'FORMACION_ESPECIAL' in tipos_formacion_seleccionados %}checked{% endif %}>
                                            <label class="form-check-label" for="formacion_especial">
                                                Formación Especial
                                                <small class="text-muted">({{ 'FORMACION_ESPECIAL' in tipos_formacion_disponibles ? 'Disponible' : 'No disponible' }})</small>
                                            </label>
                                        </div>

                                        <button type="submit" class="btn btn-primary btn-sm mt-2">
                                            <i class="fas fa-filter"></i> Aplicar Filtros
                                        </button>
                                        <button type="button" class="btn btn-success btn-sm mt-2" onclick="guardarFiltros()">
                                            <i class="fas fa-save"></i> Guardar Filtros
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>

                    <div class="table-responsive">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6>Bibliografía Básica Detallada</h6>
                            <span class="badge bg-secondary" id="contador-filas">
                                Mostrando {{ datos_bibliografia|length }} registros
                            </span>
                        </div>
                        
                        {% if datos_bibliografia|length > 0 %}
                        <table class="table table-striped table-bordered table-hover" id="tablaBibliografia">
                            <thead class="table-dark">
                                <tr>
                                    <th>Código Asignatura</th>
                                    <th>Nombre Asignatura</th>
                                    <th>Tipo Asignatura</th>
                                    <th>Título Declarado</th>
                                    <th>Año de Edición</th>
                                    <th># Ejemplares Impresos</th>
                                    <th># Ejemplares Digitales</th>
                                    <th>% Cobertura</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for fila in datos_bibliografia %}
                                <tr data-tipo-asignatura="{{ fila.tipo_asignatura }}" data-bibliografia-id="{{ fila.id_bibliografia_declarada }}">
                                    <td><strong>{{ fila.codigo_asignatura }}</strong></td>
                                    <td>{{ fila.nombre_asignatura }}</td>
                                    <td>
                                        {% if fila.tipo_asignatura == 'REGULAR' %}
                                            <span class="badge bg-success">REGULAR</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_BASICA' %}
                                            <span class="badge bg-primary">Formación Básica</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_GENERAL' %}
                                            <span class="badge bg-info">Formación General</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_IDIOMAS' %}
                                            <span class="badge bg-warning">Formación Idiomas</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_PROFESIONAL' %}
                                            <span class="badge bg-secondary">Formación Profesional</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_VALORES' %}
                                            <span class="badge bg-dark">Formación Valores</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_ESPECIALIDAD' %}
                                            <span class="badge bg-danger">Formación Especialidad</span>
                                        {% elseif fila.tipo_asignatura == 'FORMACION_ESPECIAL' %}
                                            <span class="badge bg-purple">Formación Especial</span>
                                        {% else %}
                                            <span class="badge bg-light text-dark">{{ fila.tipo_asignatura }}</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <div class="text-wrap" style="max-width: 300px;">
                                            {{ fila.titulo_declarado }}
                                        </div>
                                    </td>
                                    <td class="text-center">{{ fila.anio_edicion }}</td>
                                    <td class="text-center">
                                        {% if fila.ejemplares_impresos == 0 and fila.ejemplares_digitales == 0 and not fila.disponible %}
                                            <span class="text-muted">Sin información</span>
                                        {% else %}
                                            {{ fila.ejemplares_impresos }}
                                        {% endif %}
                                    </td>
                                    <td class="text-center">
                                        {% if fila.ejemplares_impresos == 0 and fila.ejemplares_digitales == 0 and not fila.disponible %}
                                            <span class="text-muted">Sin información</span>
                                        {% elseif fila.ejemplares_digitales == 0 %}
                                            <span class="text-success">Ilimitado</span>
                                        {% else %}
                                            {{ fila.ejemplares_digitales }}
                                        {% endif %}
                                    </td>
                                    <td class="text-center">
                                        {% if fila.cobertura == 100 %}
                                            <span class="badge bg-success">{{ fila.cobertura }}%</span>
                                        {% elseif fila.cobertura > 0 %}
                                            <span class="badge bg-warning">{{ fila.cobertura }}%</span>
                                        {% else %}
                                            <span class="badge bg-danger">{{ fila.cobertura }}%</span>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                        {% else %}
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No hay bibliografía básica declarada para las asignaturas seleccionadas.
                        </div>
                        {% endif %}
                    </div>

                    <!-- Totales de la Carrera -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <i class="fas fa-calculator"></i> Totales de la Carrera
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-primary">{{ totales_carrera.titulos_declarados }}</h4>
                                                <p class="text-muted mb-0">Total Títulos Declarados</p>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-success">{{ totales_carrera.ejemplares_impresos }}</h4>
                                                <p class="text-muted mb-0">Total Ejemplares Impresos</p>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-info">
                                                    {% if totales_carrera.titulos_disponibles > 0 and totales_carrera.ejemplares_digitales == 0 %}
                                                        Ilimitado
                                                    {% elseif totales_carrera.ejemplares_digitales == 0 %}
                                                        Sin información
                                                    {% else %}
                                                        {{ totales_carrera.ejemplares_digitales }}
                                                    {% endif %}
                                                </h4>
                                                <p class="text-muted mb-0">Total Ejemplares Digitales</p>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="{% if cobertura_basica_total >= 80 %}text-success{% elseif cobertura_basica_total >= 60 %}text-warning{% else %}text-danger{% endif %}">
                                                    {{ cobertura_basica_total }}%
                                                </h4>
                                                <p class="text-muted mb-0">Cobertura Básica de la Carrera</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block styles %}
<style>
.btn-excel {
    background-color: #28a745;
    border-color: #28a745;
    color: white;
}

.btn-excel:hover {
    background-color: #218838;
    border-color: #1e7e34;
    color: white;
}

.btn-excel:focus {
    background-color: #28a745;
    border-color: #28a745;
    color: white;
    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.table th {
    white-space: nowrap;
    vertical-align: middle;
}

.table td {
    vertical-align: middle;
}

.text-wrap {
    word-wrap: break-word;
    word-break: break-word;
}
</style>
{% endblock %}

{% block scripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script>
$(document).ready(function() {
    // Verificar si el usuario desmarcó todos los checkboxes
    var urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('tipos_formacion_vacio')) {
        // Desmarcar todos los checkboxes de formación
        $('.form-check-input[name="tipos_formacion[]"]').prop('checked', false);
    }

    // Mapeo de IDs de checkbox a tipos de asignatura
    var tipoMapping = {
        'formacion_basica': 'FORMACION_BASICA',
        'formacion_general': 'FORMACION_GENERAL',
        'formacion_idiomas': 'FORMACION_IDIOMAS',
        'formacion_profesional': 'FORMACION_PROFESIONAL',
        'formacion_valores': 'FORMACION_VALORES',
        'formacion_especialidad': 'FORMACION_ESPECIALIDAD',
        'formacion_especial': 'FORMACION_ESPECIAL'
    };

    // Función para actualizar la visibilidad de las filas
    function updateTableVisibility() {
        var visibleTypes = [];
        
        // Obtener tipos seleccionados
        Object.keys(tipoMapping).forEach(function(checkboxId) {
            if ($('#' + checkboxId).is(':checked')) {
                visibleTypes.push(tipoMapping[checkboxId]);
            }
        });
        
        // Mostrar/ocultar filas según los tipos seleccionados
        var visibleRows = 0;
        $('#tablaBibliografia tbody tr').each(function() {
            var tipoAsignatura = $(this).data('tipo-asignatura');
            var isRegular = tipoAsignatura === 'REGULAR';
            var isVisible = isRegular || visibleTypes.includes(tipoAsignatura);
            $(this).toggle(isVisible);
            if (isVisible) {
                visibleRows++;
            }
        });
        
        // Actualizar contador
        $('#contador-filas').text('Mostrando ' + visibleRows + ' registros');
    }

    // Evento para el formulario de filtros
    $('#filtroFormacionForm').submit(function(e) {
        e.preventDefault();

        // Verificar si hay algún checkbox de formación seleccionado
        var algunoSeleccionado = false;
        $('.form-check-input[name="tipos_formacion[]"]:checked').each(function() {
            algunoSeleccionado = true;
        });

        // Si ninguno está seleccionado, agregar un campo oculto
        if (!algunoSeleccionado) {
            if ($('#ningun_tipo_formacion').length === 0) {
                $(this).append('<input type="hidden" id="ningun_tipo_formacion" name="tipos_formacion_vacio" value="1">');
            }
        } else {
            $('#ningun_tipo_formacion').remove();
        }
        
        var formData = $(this).serialize();
        var currentUrl = window.location.pathname;
        var newUrl = currentUrl + '?' + formData;
        
        // Redirigir a la nueva URL con los filtros
        window.location.href = newUrl;
    });

    // Inicializar la visibilidad
    updateTableVisibility();
});

// Función para exportar a CSV
function exportarCSV() {
    // Crear el contenido CSV
    let csvContent = '\uFEFF'; // BOM para UTF-8
    
    // Encabezados
    const headers = [
        'Código Asignatura',
        'Nombre Asignatura',
        'Tipo Asignatura',
        'Título Declarado',
        'Año de Edición',
        'Ejemplares Impresos',
        'Ejemplares Digitales',
        'Cobertura (%)'
    ];
    csvContent += headers.join(',') + '\n';
    
    // Recorrer cada fila visible
    $('#tablaBibliografia tbody tr:visible').each(function() {
        const row = [];
        
        // Código Asignatura
        row.push('"' + $(this).find('td:eq(0)').text().trim().replace(/"/g, '""') + '"');
        
        // Nombre Asignatura
        row.push('"' + $(this).find('td:eq(1)').text().trim().replace(/"/g, '""') + '"');
        
        // Tipo Asignatura
        row.push('"' + $(this).find('td:eq(2) .badge').text().trim().replace(/"/g, '""') + '"');
        
        // Título Declarado
        row.push('"' + $(this).find('td:eq(3)').text().trim().replace(/"/g, '""') + '"');
        
        // Año de Edición
        row.push($(this).find('td:eq(4)').text().trim());
        
        // Ejemplares Impresos
        row.push($(this).find('td:eq(5)').text().trim());
        
        // Ejemplares Digitales
        const ejemplaresDigitales = $(this).find('td:eq(6)').text().trim();
        row.push('"' + (ejemplaresDigitales === 'Ilimitado' ? 'Ilimitado' : ejemplaresDigitales) + '"');
        
        // Cobertura
        row.push($(this).find('td:eq(7) .badge').text().trim());
        
        csvContent += row.join(',') + '\n';
    });
    
    // Crear y descargar el archivo
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    link.setAttribute('href', url);
    link.setAttribute('download', 'Reporte_Expandido_Bibliografia_Basica_{{ carrera.sede }}_{{ carrera.codigo }}_{{ carrera.nombre|replace({' ': '_'}) }}.csv');
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}

// Función para exportar a Excel
function exportarExcel() {
    // Obtener los parámetros de la URL actual
    const urlParams = new URLSearchParams(window.location.search);
    const tiposFormacion = urlParams.getAll('tipos_formacion[]');
    const tiposFormacionVacio = urlParams.get('tipos_formacion_vacio');
    
    // Construir la URL de exportación
    let exportUrl = '/biblioges/reportes/coberturas-expandido-excel/{{ carrera.sede_id }}/{{ carrera.carrera_id }}';
    
    // Agregar parámetros de filtro si existen
    const params = new URLSearchParams();
    if (tiposFormacion.length > 0) {
        tiposFormacion.forEach(tipo => {
            params.append('tipos_formacion[]', tipo);
        });
    }
    if (tiposFormacionVacio) {
        params.append('tipos_formacion_vacio', tiposFormacionVacio);
    }
    
    if (params.toString()) {
        exportUrl += '?' + params.toString();
    }
    
    // Mostrar indicador de carga
    Swal.fire({
        title: 'Generando Excel...',
        text: 'Por favor espere mientras se procesa el archivo',
        allowOutsideClick: false,
        allowEscapeKey: false,
        showConfirmButton: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });
    
    // Realizar la petición al servidor
    fetch(exportUrl)
        .then(response => {
            if (!response.ok) {
                throw new Error('Error en la generación del archivo');
            }
            return response.json();
        })
        .then(data => {
            if (data.error) {
                throw new Error(data.error);
            }
            
            // Cerrar el indicador de carga
            Swal.close();
            
            // Crear enlace de descarga
            const link = document.createElement('a');
            link.href = data.url;
            link.download = '';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // Mostrar mensaje de éxito
            Swal.fire({
                icon: 'success',
                title: '¡Excel generado!',
                text: 'El archivo se ha descargado correctamente',
                timer: 2000,
                showConfirmButton: false
            });
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'No se pudo generar el archivo Excel: ' + error.message
            });
        });
}

// Función para guardar el reporte
function guardarReporte() {
    // Obtener los parámetros de la URL actual
    const urlParams = new URLSearchParams(window.location.search);
    const tiposFormacion = urlParams.getAll('tipos_formacion[]');
    const tiposFormacionVacio = urlParams.get('tipos_formacion_vacio');
    
    // Construir la URL para guardar el reporte
    let guardarUrl = '/biblioges/reportes/guardar-cobertura-basica/{{ carrera.sede_id }}/{{ carrera.carrera_id }}';
    
    // Recopilar datos de la tabla
    const detalles = [];
    $('#tablaBibliografia tbody tr:visible').each(function() {
        const fila = $(this);
        const codigoAsignatura = fila.find('td:first').text().trim();
        const nombreAsignatura = fila.find('td:eq(1)').text().trim();
        const tipoAsignatura = fila.find('td:eq(2) .badge').text().trim();
        const tituloDeclarado = fila.find('td:eq(3)').text().trim();
        const anioEdicion = fila.find('td:eq(4)').text().trim();
        const ejemplaresImpresos = fila.find('td:eq(5)').text().trim();
        const ejemplaresDigitales = fila.find('td:eq(6)').text().trim();
        const cobertura = fila.find('td:eq(7) .badge').text().trim().replace('%', '');
        
        // Obtener el ID de la bibliografía declarada desde los datos de la fila
        const idBibliografiaDeclarada = fila.data('bibliografia-id');
        
        // Determinar si está disponible basado en la cobertura
        const disponible = parseInt(cobertura) > 0 ? 1 : 0;
        
        // Convertir ejemplares a números
        const ejemImp = ejemplaresImpresos === 'Sin información' ? 0 : parseInt(ejemplaresImpresos) || 0;
        const ejemDig = ejemplaresDigitales === 'Sin información' || ejemplaresDigitales === 'Ilimitado' ? 0 : parseInt(ejemplaresDigitales) || 0;
        
        detalles.push({
            codigo_asignatura: codigoAsignatura,
            nombre_asignatura: nombreAsignatura,
            tipo_asignatura: tipoAsignatura,
            titulo_declarado: tituloDeclarado,
            anio_edicion: anioEdicion,
            ejemplares_impresos: ejemImp,
            ejemplares_digitales: ejemDig,
            cobertura: parseInt(cobertura) || 0,
            disponible: disponible,
            id_bibliografia_declarada: idBibliografiaDeclarada
        });
    });
    
    // Preparar datos para enviar
    const datosReporte = {
        detalles: detalles,
        fecha_medicion: new Date().toISOString(),
        filtros_aplicados: {
            tipos_formacion: tiposFormacion,
            tipos_formacion_vacio: tiposFormacionVacio
        }
    };
    
    // Mostrar confirmación
    Swal.fire({
        title: '¿Guardar Reporte?',
        text: `Se guardará el reporte de cobertura básica para el año actual con ${detalles.length} registros. Si ya existe un reporte para este año, se actualizará.`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Sí, guardar',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            // Mostrar indicador de carga
            Swal.fire({
                title: 'Guardando reporte...',
                text: 'Por favor espere mientras se procesa la información',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            
            // Realizar la petición al servidor
            fetch(guardarUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(datosReporte)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error en el servidor');
                }
                return response.json();
            })
            .then(data => {
                if (data.error) {
                    throw new Error(data.error);
                }
                
                // Cerrar el indicador de carga
                Swal.close();
                
                // Mostrar mensaje de éxito
                Swal.fire({
                    icon: 'success',
                    title: '¡Reporte guardado!',
                    text: data.message || 'El reporte se ha guardado correctamente',
                    timer: 3000,
                    showConfirmButton: false
                });
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'No se pudo guardar el reporte: ' + error.message
                });
            });
        }
    });
}

// Función para guardar filtros de formación
function guardarFiltros() {
    var filtros = [];
    $('.form-check-input[name="tipos_formacion[]"]:checked').each(function() {
        filtros.push($(this).val());
    });
    
    var btn = $('button[onclick="guardarFiltros()"]');
    var originalText = btn.html();
    btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Guardando...');
    
    $.ajax({
        url: '/biblioges/reportes/guardar-filtros-formacion/{{ carrera.sede_id }}/{{ carrera.carrera_id }}',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ filtros: filtros }),
        success: function(response) {
            if (response.success) {
                Swal.fire({
                    title: '¡Éxito!',
                    text: response.message,
                    icon: 'success',
                    confirmButtonText: 'Aceptar'
                });
            } else {
                Swal.fire({
                    title: 'Error',
                    text: response.error || 'Error al guardar los filtros',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            }
        },
        error: function(xhr, status, error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: 'Error al guardar los filtros: ' + error,
                icon: 'error',
                confirmButtonText: 'Aceptar'
            });
        }
    }).always(function() {
        btn.prop('disabled', false).html(originalText);
    });
}
</script>
{% endblock %}
