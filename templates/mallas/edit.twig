{% extends "base.twig" %}

{% block title %}Editar Malla - {{ carrera.nombre }}{% endblock %}

{% block content %}
<div class="container-fluid">
    <!-- Información de la Carrera -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Información de la Carrera</h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <p><strong>Nombre:</strong> {{ carrera.nombre }}</p>
                </div>
                <div class="col-md-4">
                    <p><strong>Tipo de Programa:</strong>
                        {% if carrera.tipo_programa == 'P' %}
                            Pregrado
                        {% elseif carrera.tipo_programa == 'G' %}
                            Postgrado
                        {% elseif carrera.tipo_programa == 'O' %}
                            Otro
                        {% else %}
                            {{ carrera.tipo_programa }}
                        {% endif %}
                    </p>
                </div>
                <div class="col-md-4">
                    <p><strong>Estado:</strong>
                        {% if carrera.estado == 1 %}
                            <span class="badge bg-success">Activo</span>
                        {% else %}
                            <span class="badge bg-danger">Inactivo</span>
                        {% endif %}
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Información de Carreras Espejo -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Información de Carreras Espejo</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-primary">
                        <tr>
                            <th>Código</th>
                            <th>Vigencia Desde</th>
                            <th>Vigencia Hasta</th>
                            <th>Sede</th>
                            <th>Facultad</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for i in 0..carrera.codigos_carrera|length-1 %}
                        <tr>
                            <td>{{ carrera.codigos_carrera[i] }}</td>
                            <td>{{ carrera.vigencias_desde[i] }}</td>
                            <td>{{ carrera.vigencias_hasta[i] }}</td>
                            <td>{{ carrera.sedes[i] }}</td>
                            <td>{{ carrera.facultades[i] }}</td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Panel de Edición de Malla -->
    <div class="row">
        <!-- Panel Izquierdo: Asignaturas Disponibles -->
        <div class="col-md-5">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Asignaturas Disponibles</h6>
                </div>
                <div class="card-body">
                    <!-- Selector de Sede -->
                    <div class="mb-3">
                        <label for="sede" class="form-label">Seleccionar Sede</label>
                        <select class="form-select" id="sede">
                            <option value="">Seleccione una sede</option>
                            {% for sede in sedes %}
                                <option value="{{ sede.id }}">{{ sede.nombre }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <!-- Selector de Facultad -->
                    <div class="mb-3">
                        <label for="facultad" class="form-label">Seleccionar Facultad</label>
                        <select class="form-select" id="facultad" disabled>
                            <option value="">Primero seleccione una sede</option>
                        </select>
                    </div>

                    <!-- Selector de Departamento -->
                    <div class="mb-3">
                        <label for="departamento" class="form-label">Seleccionar Departamento</label>
                        <select class="form-select" id="departamento" disabled>
                            <option value="">Primero seleccione una facultad</option>
                        </select>
                    </div>

                    <!-- Lista de Asignaturas Disponibles -->
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead class="table-primary">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Tipo</th>
                                    <th>Periodicidad</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody id="asignaturas-disponibles">
                                <tr>
                                    <td colspan="4" class="text-center">Seleccione una sede y facultad</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Panel Central: Botones de Acción -->
        <div class="col-md-2 d-flex align-items-center justify-content-center">
            <div class="d-flex flex-column gap-2">
                <button class="btn btn-primary" id="btn-agregar" disabled>
                    <i class="fas fa-arrow-right"></i>
                </button>
                <button class="btn btn-danger" id="btn-quitar" disabled>
                    <i class="fas fa-arrow-left"></i>
                </button>
            </div>
        </div>

        <!-- Panel Derecho: Asignaturas Vinculadas -->
        <div class="col-md-5">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Asignaturas Vinculadas</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead class="table-primary">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Tipo</th>
                                    <th>Periodicidad</th>
                                    <th>Semestre</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody id="asignaturas-vinculadas">
                                {% if carrera.asignaturas is defined and carrera.asignaturas|length > 0 %}
                                    {% for asignatura in carrera.asignaturas %}
                                    <tr data-id="{{ asignatura.id }}">
                                        <td>{{ asignatura.nombre }}</td>
                                        <td>{{ asignatura.tipo }}</td>
                                        <td>{{ asignatura.periodicidad }}</td>
                                        <td>{{ asignatura.semestre }}</td>
                                        <td>
                                            <button class="btn btn-sm btn-danger btn-seleccionar">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                {% else %}
                                    <tr>
                                        <td colspan="5" class="text-center">No hay asignaturas vinculadas</td>
                                    </tr>
                                {% endif %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Botones de acción -->
    <div class="d-flex gap-2 mb-4">
        <a href="{{ app_url }}mallas" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Volver
        </a>
        <button type="button" class="btn btn-primary" id="btn-guardar">
            <i class="fas fa-save"></i> Guardar Cambios
        </button>
    </div>
</div>

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Definir la variable app_url dentro del scope de DOMContentLoaded
    const app_url = "{{ app_url }}";
    
    const sedeSelect = document.getElementById('sede');
    const facultadSelect = document.getElementById('facultad');
    const departamentoSelect = document.getElementById('departamento');
    const btnAgregar = document.getElementById('btn-agregar');
    const btnQuitar = document.getElementById('btn-quitar');
    const btnGuardar = document.getElementById('btn-guardar');
    const asignaturasDisponibles = document.getElementById('asignaturas-disponibles');
    const asignaturasVinculadas = document.getElementById('asignaturas-vinculadas');

    let asignaturasSeleccionadas = new Set();
    let asignaturasVinculadasSeleccionadas = new Set();

    // Función para resetear los selectores
    function resetearSelectores() {
        facultadSelect.disabled = true;
        facultadSelect.innerHTML = '<option value="">Primero seleccione una sede</option>';
        departamentoSelect.disabled = true;
        departamentoSelect.innerHTML = '<option value="">Primero seleccione una facultad</option>';
        asignaturasDisponibles.innerHTML = '<tr><td colspan="4" class="text-center">Seleccione una sede y facultad</td></tr>';
    }

    // Manejar cambio de sede
    sedeSelect.addEventListener('change', function() {
        const sedeId = this.value;
        
        // Resetear los selectores dependientes
        resetearSelectores();
        
        if (sedeId) {
            // Caso especial para "Sin Sede" (ID: 14)
            if (sedeId === '14') {
                // Cargar directamente "Sin Facultad" (ID: 9)
                facultadSelect.innerHTML = '<option value="9">Sin Facultad</option>';
            facultadSelect.disabled = false;
            
                // Cargar directamente "Sin Departamento" (ID: 7)
                departamentoSelect.innerHTML = '<option value="7">Sin Departamento</option>';
                departamentoSelect.disabled = false;
                
                // Cargar asignaturas del departamento "Sin Departamento"
                cargarAsignaturasDepartamento('7');
                return;
            }

            // Para otras sedes, cargar facultades normalmente
            const apiUrl = `${app_url}api/facultades/sede/${sedeId}`;
            
            fetch(apiUrl, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Error en la respuesta del servidor: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                facultadSelect.innerHTML = '<option value="">Seleccione una facultad</option>';
                
                if (Array.isArray(data) && data.length > 0) {
                    data.forEach(facultad => {
                        facultadSelect.innerHTML += `<option value="${facultad.id}">${facultad.nombre}</option>`;
                    });
                    facultadSelect.disabled = false;
                } else {
                    facultadSelect.innerHTML += '<option value="" disabled>No hay facultades disponibles para esta sede</option>';
                    facultadSelect.disabled = true;
                }
            })
            .catch(error => {
                console.error('Error al cargar facultades:', error);
                facultadSelect.innerHTML = '<option value="">Error al cargar facultades</option>';
            facultadSelect.disabled = true;
            });
        }
    });

    // Función para cargar asignaturas de un departamento
    function cargarAsignaturasDepartamento(deptoId) {
            fetch(`${app_url}api/asignaturas/departamento/${deptoId}`)
                .then(response => response.json())
                .then(data => {
                    asignaturasDisponibles.innerHTML = '';
                if (Array.isArray(data) && data.length > 0) {
                    data.forEach(asignatura => {
                        // Verificar si la asignatura ya está vinculada
                        const yaVinculada = Array.from(asignaturasVinculadas.querySelectorAll('tr[data-id]'))
                            .some(row => row.dataset.id === asignatura.id.toString());
                        
                        if (!yaVinculada) {
                            asignaturasDisponibles.innerHTML += `
                                <tr data-id="${asignatura.id}">
                                    <td>${asignatura.nombre}</td>
                                    <td>${asignatura.tipo}</td>
                                    <td>${asignatura.periodicidad}</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary btn-seleccionar">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </td>
                                </tr>
                            `;
                        }
                    });
                } else {
                    asignaturasDisponibles.innerHTML = '<tr><td colspan="4" class="text-center">No hay asignaturas disponibles</td></tr>';
                }
                })
            .catch(error => {
                console.error('Error al cargar asignaturas:', error);
                asignaturasDisponibles.innerHTML = '<tr><td colspan="4" class="text-center">Error al cargar asignaturas</td></tr>';
            });
    }

    // Manejar cambio de facultad
    facultadSelect.addEventListener('change', function() {
        const sedeId = sedeSelect.value;
        const facultadId = this.value;
        
        if (facultadId) {
            // Caso especial para "Sin Facultad" (ID: 9)
            if (facultadId === '9') {
                departamentoSelect.innerHTML = '<option value="7">Sin Departamento</option>';
                departamentoSelect.disabled = false;
                cargarAsignaturasDepartamento('7');
                return;
            }

            // Para otras facultades, cargar departamentos normalmente
            departamentoSelect.disabled = false;
            
            fetch(`${app_url}api/departamentos/${sedeId}/${facultadId}`)
                .then(response => response.json())
                .then(data => {
                    departamentoSelect.innerHTML = '<option value="">Seleccione un departamento</option>';
                    if (Array.isArray(data) && data.length > 0) {
                        data.forEach(depto => {
                            departamentoSelect.innerHTML += `<option value="${depto.id}">${depto.nombre}</option>`;
                        });
                    } else {
                        departamentoSelect.innerHTML += '<option value="" disabled>No hay departamentos disponibles</option>';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    departamentoSelect.innerHTML = '<option value="">Error al cargar departamentos</option>';
                });
        } else {
            departamentoSelect.disabled = true;
            departamentoSelect.innerHTML = '<option value="">Primero seleccione una facultad</option>';
            asignaturasDisponibles.innerHTML = '<tr><td colspan="4" class="text-center">Seleccione una facultad</td></tr>';
        }
    });

    // Manejar cambio de departamento
    departamentoSelect.addEventListener('change', function() {
        const deptoId = this.value;
        if (deptoId) {
            cargarAsignaturasDepartamento(deptoId);
        } else {
            asignaturasDisponibles.innerHTML = '<tr><td colspan="4" class="text-center">Seleccione un departamento</td></tr>';
        }
    });

    // Manejar selección de asignaturas disponibles
    asignaturasDisponibles.addEventListener('click', function(e) {
        if (e.target.closest('.btn-seleccionar')) {
            const row = e.target.closest('tr');
            const id = row.dataset.id;
            
            if (asignaturasSeleccionadas.has(id)) {
                asignaturasSeleccionadas.delete(id);
                row.classList.remove('table-primary');
            } else {
                asignaturasSeleccionadas.add(id);
                row.classList.add('table-primary');
            }
            
            btnAgregar.disabled = asignaturasSeleccionadas.size === 0;
        }
    });

    // Manejar selección de asignaturas vinculadas
    asignaturasVinculadas.addEventListener('click', function(e) {
        if (e.target.closest('.btn-seleccionar')) {
            const row = e.target.closest('tr');
            const id = row.dataset.id;
            
            if (asignaturasVinculadasSeleccionadas.has(id)) {
                asignaturasVinculadasSeleccionadas.delete(id);
                row.classList.remove('table-primary');
            } else {
                asignaturasVinculadasSeleccionadas.add(id);
                row.classList.add('table-primary');
            }
            
            btnQuitar.disabled = asignaturasVinculadasSeleccionadas.size === 0;
        }
    });

    // Función para cargar asignaturas vinculadas iniciales
    function cargarAsignaturasVinculadas() {
        const rows = asignaturasVinculadas.querySelectorAll('tr[data-id]');
        rows.forEach(row => {
            // Asegurarse de que cada fila tenga un select para el semestre
            if (!row.querySelector('select')) {
                const semestreCell = row.cells[3];
                const selectSemestre = document.createElement('select');
                selectSemestre.className = 'form-select form-select-sm';
                
                // Agregar opciones del 1 al 10
                for (let i = 1; i <= 10; i++) {
                    const option = document.createElement('option');
                    option.value = i;
                    option.textContent = i;
                    selectSemestre.appendChild(option);
                }
                
                // Si hay un valor de semestre existente, seleccionarlo
                const semestreActual = semestreCell.textContent.trim();
                if (semestreActual) {
                    selectSemestre.value = semestreActual;
                }
                
                semestreCell.innerHTML = '';
                semestreCell.appendChild(selectSemestre);
            }
        });
    }

    // Manejar agregar asignaturas
    btnAgregar.addEventListener('click', function() {
        const rows = asignaturasDisponibles.querySelectorAll('tr[data-id]');
        rows.forEach(row => {
            if (asignaturasSeleccionadas.has(row.dataset.id)) {
                const asignatura = {
                    id: row.dataset.id,
                    nombre: row.cells[0].textContent,
                    tipo: row.cells[1].textContent,
                    periodicidad: row.cells[2].textContent
                };
                
                // Crear el selector de semestre
                const selectSemestre = document.createElement('select');
                selectSemestre.className = 'form-select form-select-sm';
                for (let i = 1; i <= 10; i++) {
                    const option = document.createElement('option');
                    option.value = i;
                    option.textContent = i;
                    selectSemestre.appendChild(option);
                }
                
                // Crear la nueva fila
                const nuevaFila = document.createElement('tr');
                nuevaFila.dataset.id = asignatura.id;
                nuevaFila.innerHTML = `
                        <td>${asignatura.nombre}</td>
                        <td>${asignatura.tipo}</td>
                        <td>${asignatura.periodicidad}</td>
                    <td></td>
                        <td>
                            <button class="btn btn-sm btn-danger btn-seleccionar">
                                <i class="fas fa-times"></i>
                            </button>
                        </td>
                `;
                
                // Agregar el selector de semestre a la celda
                const semestreCell = nuevaFila.cells[3];
                semestreCell.appendChild(selectSemestre);
                
                // Agregar la nueva fila a la tabla
                asignaturasVinculadas.appendChild(nuevaFila);
                
                // Eliminar de la tabla de disponibles
                row.remove();
            }
        });
        
        asignaturasSeleccionadas.clear();
        btnAgregar.disabled = true;
    });

    // Manejar quitar asignaturas
    btnQuitar.addEventListener('click', function() {
        const rows = asignaturasVinculadas.querySelectorAll('tr[data-id]');
        rows.forEach(row => {
            if (asignaturasVinculadasSeleccionadas.has(row.dataset.id)) {
                // Crear nueva fila para la tabla de disponibles
                const nuevaFila = document.createElement('tr');
                nuevaFila.dataset.id = row.dataset.id;
                nuevaFila.innerHTML = `
                        <td>${row.cells[0].textContent}</td>
                        <td>${row.cells[1].textContent}</td>
                        <td>${row.cells[2].textContent}</td>
                        <td>
                            <button class="btn btn-sm btn-primary btn-seleccionar">
                                <i class="fas fa-plus"></i>
                            </button>
                        </td>
                `;
                
                // Agregar la nueva fila a la tabla de disponibles
                asignaturasDisponibles.appendChild(nuevaFila);
                
                // Eliminar de la tabla de vinculadas
                row.remove();
            }
        });
        
        asignaturasVinculadasSeleccionadas.clear();
        btnQuitar.disabled = true;
    });

    // Manejar guardado de cambios
    btnGuardar.addEventListener('click', function() {
        const asignaturas = [];
        const rows = asignaturasVinculadas.querySelectorAll('tr[data-id]');
        
        // Verificar si hay asignaturas vinculadas
        if (rows.length === 0) {
            alert('No hay asignaturas vinculadas para guardar');
            return;
        }

        // Recolectar todas las asignaturas vinculadas
        rows.forEach(row => {
            const selectSemestre = row.querySelector('select');
            if (selectSemestre) {
            asignaturas.push({
                id: row.dataset.id,
                    semestre: selectSemestre.value,
                    nombre: row.cells[0].textContent,
                    tipo: row.cells[1].textContent,
                    periodicidad: row.cells[2].textContent
            });
            }
        });

        // Mostrar confirmación antes de guardar
        if (!confirm(`¿Está seguro de guardar ${asignaturas.length} asignaturas en la malla?`)) {
            return;
        }

        // Enviar datos al servidor
        fetch(`${app_url}api/mallas/{{ carrera.id }}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ 
                asignaturas: asignaturas,
                carrera_id: {{ carrera.id }}
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Error en la respuesta del servidor: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                alert('Malla actualizada correctamente');
                window.location.href = `${app_url}mallas/{{ carrera.id }}`;
            } else {
                alert('Error al actualizar la malla: ' + (data.error || 'Error desconocido'));
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error al actualizar la malla: ' + error.message);
        });
    });

    // Cargar asignaturas vinculadas al iniciar
    cargarAsignaturasVinculadas();
});
</script>
{% endblock %}
{% endblock %} 