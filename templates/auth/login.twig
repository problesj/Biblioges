{% extends "base.twig" %}

{% block title %}Iniciar Sesión - Biblioges{% endblock %}

{% block content %}
    <!-- Contenido Principal -->
    <main class="container my-4">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow">
                    <div class="card-body">
                        <h2 class="text-center mb-4">Iniciar Sesión</h2>
                        
                        {% if error is defined %}
                        <div class="alert alert-danger">
                            {{ error }}
                        </div>
                        {% endif %}
                        
                        <form id="loginForm" action="{{ app_url }}login" method="POST" class="user" novalidate>
                            <div class="form-group">
                                <label for="email">Correo Electrónico</label>
                                <input type="email" 
                                       class="form-control" 
                                       id="email" 
                                       name="email" 
                                       required 
                                       autocomplete="email"
                                       value="{{ email }}">
                            </div>
                            
                            <div class="form-group">
                                <label for="password">Contraseña</label>
                                <input type="password" 
                                       class="form-control" 
                                       id="password" 
                                       name="password" 
                                       required 
                                       autocomplete="current-password">
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block styles %}
<style>
    .bg-login-image {
        background: url("https://source.unsplash.com/K4mSJ7kc0As/600x800");
        background-position: center;
        background-size: cover;
    }
    
    .btn-user {
        font-size: 0.8rem;
        border-radius: 10rem;
        padding: 0.75rem 1rem;
    }
    
    .form-control-user {
        font-size: 0.8rem;
        border-radius: 10rem;
        padding: 0.75rem 1rem;
    }

    .notification {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px;
        border-radius: 5px;
        color: white;
        z-index: 1000;
    }

    .notification.success {
        background-color: #28a745;
    }

    .notification.error {
        background-color: #dc3545;
    }
</style>
{% endblock %}

{% block scripts %}
<script>
    (function() {
        'use strict';

        const loginForm = document.getElementById('loginForm');
        
        if (loginForm) {
            console.log('Formulario de login encontrado');
            
            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('email').value.trim();
                const password = document.getElementById('password').value.trim();
                
                console.log('Datos del formulario:', { email, password });
                
                if (!email || !password) {
                    showNotification('Por favor complete todos los campos', 'error');
                    return;
                }
                
                try {
                    console.log('Enviando datos de login...');
                    
                    const formData = new FormData();
                    formData.append('email', email);
                    formData.append('password', password);
                    
                    const response = await fetch(this.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'Accept': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });
                    
                    console.log('Status de la respuesta:', response.status);
                    console.log('Content-Type:', response.headers.get('Content-Type'));
                    
                    const contentType = response.headers.get('Content-Type');
                    if (!contentType || !contentType.includes('application/json')) {
                        const text = await response.text();
                        console.error('Respuesta del servidor:', text);
                        throw new Error('La respuesta del servidor no es JSON');
                    }
                    
                    const result = await response.json();
                    console.log('Respuesta del servidor:', result);
                    
                    if (result.success) {
                        window.location.href = result.redirect;
                    } else {
                        showNotification(result.message || 'Error en las credenciales', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showNotification('Error al conectar con el servidor. Por favor intente nuevamente.', 'error');
                }
            });
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 5000);
        }
    })();
</script>
{% endblock %} 